//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Player Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Input"",
    ""maps"": [
        {
            ""name"": ""Moving"",
            ""id"": ""292beedc-8e74-4e35-94aa-d0a7e4b59b4f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""d2879192-fcc0-47d1-87ff-879507ab9ea5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""c23d6657-5da0-4744-ba52-9dcf5f12d270"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""566a2ff0-0214-4a80-992c-055261427ddd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""43f8ea40-368a-46c0-ac4b-18283b96ab4a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""dc4d97ab-0b63-44cb-bb5e-a7dfd7884540"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""64b98850-0947-40ef-b82f-f0b944fde7fe"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""0ea946de-54a0-47a9-b501-6fcfe3b9c512"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""53d74555-669b-416d-87a1-1e6de64b176e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""2cf2616a-8f19-41c5-a01c-cb5ffa762d81"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""01aa9e60-2518-473d-9416-9feefbcbdf3e"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""98249f9d-2a5d-46df-aab6-bb42dc35faa7"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""244359bb-2bc6-40ea-b883-d5f2b66fd187"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""185990b4-14a4-4cb8-8816-93dc42c0240d"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""79288083-7a10-43bb-8445-8e2c0afbaf56"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93982d96-0ecd-4c29-9aed-31e122edc87a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7601c114-a3c6-4eb9-87e0-1fbf743873aa"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3571680-466d-40fa-9b8d-31bebd799296"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""870443cf-9d19-49b2-ba2e-aac73261e032"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""e0bf3788-bbd9-4433-9ae9-24b81eb0e095"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f11c260d-b1cf-4746-bd48-bf40248c324f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""618fd025-931c-4ee3-a73c-9d6c48cf7a96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""ebe380e6-eda3-4a42-aeba-e428fe551bd9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""72411f65-e6d4-41a1-9bd1-15b5499cac4f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""07d95fa5-3d5d-4a7f-8a55-b76ececb1533"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c1b35c90-78b3-49fe-9e8d-28cb6620a896"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ca126194-1749-4a7a-93f8-b55a2449f20a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b6d3b2ec-92b1-4dc3-b219-dd9d1fb67a1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bf02eb2d-72f0-469e-8b6d-de2d9b35d581"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""64b2aadb-92ee-4762-875e-29654809b612"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5a70c91b-6bcc-4218-9e0d-b31ba0b14f8c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""145ffb2f-cd5a-4c1b-a5f0-040900eddfd3"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""3955438f-b673-454f-9856-ea687743d3d3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a6172876-c8ff-4c44-961f-d6feb01d3bcb"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""aae17201-bc4f-4e27-a582-9b88a90876ab"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b62644cb-1e7b-4424-9638-fd20442034ad"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1530b078-f584-4966-b216-e33234ee6ad9"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d62fa113-e8e9-4756-b174-559b39d1ecf9"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""04a4655f-4180-494a-95c6-d3ce8c4415c0"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""034f4da5-20e6-45a5-8d9b-57c0993613d5"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""836377bc-7348-40cb-962e-ce5952370830"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d1aa3837-4301-4709-9268-bd70121e52ff"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""37ace820-f2ce-453f-aaac-cdcb2881dffb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5f4b61dc-6201-49b5-9dbf-3466d4c4c317"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4305afde-06ee-40e7-90eb-fe8ab2f861c6"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7259eed0-ba2b-451c-835f-aa8d5c3e2b9e"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ed2512f4-b436-4a46-ad95-d2238cadb2bd"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""b8c9f118-1a1d-40bd-861d-0956ee62d73f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4135f813-390b-4748-9eff-a8e8a93feb08"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d0b185f7-8143-4560-bcee-d132cccd1206"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aec79258-ce20-4a0f-8a99-3b0438ae8ed6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e6d75921-3f81-44d7-8389-ba8223494610"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""70a5eb2b-1529-4b61-ad6f-0384856e0075"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""389f184d-e35a-4aa7-be0d-6c32f735848d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aebd850b-14b4-46c4-b6a0-f8e821c676c3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""05baca99-d28a-496f-af46-fb3ff331833d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c885631c-2979-406c-af99-58fc77f5c8df"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5c46248-3545-461e-8c0c-2641759d54ce"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ef292ad-ca44-4065-8802-162bba08489a"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d313d2b-7bc9-43e0-9659-95128d45d6da"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79af4cab-58b4-41e1-ba8b-8f8e298b09a7"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""055ebf62-f1fc-4e48-bbe6-4d14a00ba1e8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9648908-db1e-4a3d-90be-b3592589afcb"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2505b21-e910-4bdf-bcbd-1c0e51473a34"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bdb6384-679b-456a-8b1d-451e48142f95"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20c23e7a-1529-4dae-b5a0-cd2b59bd95d0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ade94cb1-334c-4ae8-bcab-63aade1a5b70"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81fc971d-5fd1-464a-ad18-24edb1ca6751"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0018095-7a91-412a-8791-5e941aa0e141"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d30f7e91-cc9e-4f88-beb5-7d00ed27dcb8"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Piano"",
            ""id"": ""3a3afc85-81cb-416b-a382-6a2e63b1a545"",
            ""actions"": [
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""bed462fe-4808-4dfd-9e0f-3fe57f8c871f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key0"",
                    ""type"": ""Button"",
                    ""id"": ""e691b478-c9e9-4319-aa8f-67ce41e44c78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key1"",
                    ""type"": ""Button"",
                    ""id"": ""7e7010dd-c749-4900-b47b-3fc5595ad0e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key2"",
                    ""type"": ""Button"",
                    ""id"": ""2e52ebe2-8624-4a7d-9fe7-c897c3272331"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key3"",
                    ""type"": ""Button"",
                    ""id"": ""6a756fe9-812c-495c-842b-3738759b2d5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key4"",
                    ""type"": ""Button"",
                    ""id"": ""11768a12-1432-4664-8992-d2c69db82077"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key5"",
                    ""type"": ""Button"",
                    ""id"": ""e4491b08-5dfe-4545-bd93-0571e2aaca66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key6"",
                    ""type"": ""Button"",
                    ""id"": ""9c549849-5e38-471a-aa08-eac8b2f185d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key7"",
                    ""type"": ""Button"",
                    ""id"": ""0e6d1ce0-27ab-43ea-b62a-f33d8b2c097e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key8"",
                    ""type"": ""Button"",
                    ""id"": ""28385122-b86f-42c9-8fc5-2e08b75c203c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key9"",
                    ""type"": ""Button"",
                    ""id"": ""3cce0e02-6669-4adb-b55f-811e8a6d8426"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key10"",
                    ""type"": ""Button"",
                    ""id"": ""53fd0c6c-3557-472f-8a18-dccd4c7c12c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key11"",
                    ""type"": ""Button"",
                    ""id"": ""67c6c9fc-4a2a-41b5-ab58-1be16e54bcaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c0a689e6-33f6-4c60-bb5c-cd5c226a5921"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52cadb0a-c68c-4cbf-9e4c-46af7284a1d1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81bbc067-1579-4eb0-8c91-b5a5470db75a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39ef61af-1907-4e2f-83e6-582f4e32429e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57e30604-87e4-4ab3-8992-fda36fa1cba3"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""693ac38f-e0dd-4569-96da-9528704e45b9"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef3807f9-e0fc-435b-98bb-7fa746758fe1"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78f9c480-521e-4af3-9ea4-97fb47e5b90a"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d37d4f5-5218-4cff-8e33-b270b6351c11"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51699906-63a9-470a-a718-dd0df27d83d0"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4eac2e6-4cf1-40bd-aa72-ca173be626c7"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bb745e9-92d5-4105-837e-35b96a86b823"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70774e67-adf7-4e81-a2e5-62d2b366b312"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db52008f-efcd-40d6-827a-4fd6d418158d"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Drum"",
            ""id"": ""e8eb4883-6df1-4ec9-955a-8378e57bfcd5"",
            ""actions"": [
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""64606237-d3ee-4793-aff3-00547bbabcf3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""77f76d7e-b430-48cc-ac61-5d82caee5d40"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d25680f4-103d-4029-8d22-5e7636e76c90"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Phone"",
            ""id"": ""63fff13f-8608-4a44-aca3-15599b6783a9"",
            ""actions"": [
                {
                    ""name"": ""HangUp"",
                    ""type"": ""Button"",
                    ""id"": ""425b427d-a349-4626-a351-d4c9711661bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Question1"",
                    ""type"": ""Button"",
                    ""id"": ""2ebf7aa7-b5ab-47aa-a508-fb8721b6208a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Question2"",
                    ""type"": ""Button"",
                    ""id"": ""5c48e68b-dc1f-4841-93f3-68978db4fcc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Question3"",
                    ""type"": ""Button"",
                    ""id"": ""b387bfd3-5094-44f5-bbbd-00e86ffa9c74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Question4"",
                    ""type"": ""Button"",
                    ""id"": ""59fc0aec-bb1b-41a5-83a5-7552e36ce0e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0a24f3da-001f-4dbb-b9d7-309af2f9135a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HangUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b99b42f-c0ad-4047-b49e-9d3b797ea646"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HangUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32bd8966-517f-49e3-95a8-1cfdcfa2ae92"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4e687a0-53e9-44a4-8fc6-02d36d69c1ca"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""313b9ec2-d876-4a52-baa0-4fc8ff67073f"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d59ea883-b835-442b-8e0f-f9f974b59441"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b690e543-1ec8-43b5-9e1f-a9fd56671b76"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72b04041-8f9e-4e2a-8cbf-ed3e63536eec"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2afe3943-873a-4361-bc1a-4a2360d206d5"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b741a70-e4ce-484f-9358-c2bc2c2a4817"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Question4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Computer"",
            ""id"": ""eae35682-f1c3-452e-b569-c57f3563649e"",
            ""actions"": [
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""621447f5-3f6d-4225-87e1-cf8033f03806"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a047bbf8-66fc-4fd0-9f94-12536e2dc018"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6b06dfd-0fa9-492d-b5af-f34dc333e534"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RestartGame"",
            ""id"": ""5fbd07ed-e4d4-492f-b3c5-4059a2cfd465"",
            ""actions"": [
                {
                    ""name"": ""RestartGame"",
                    ""type"": ""Button"",
                    ""id"": ""63641ebf-9075-4564-bc97-0f04597b666b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""34c06fdd-cb9b-4d99-9af5-48f86ccf2795"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestartGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<VirtualMouse>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Mouse"",
            ""bindingGroup"": ""Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Moving
        m_Moving = asset.FindActionMap("Moving", throwIfNotFound: true);
        m_Moving_Move = m_Moving.FindAction("Move", throwIfNotFound: true);
        m_Moving_Look = m_Moving.FindAction("Look", throwIfNotFound: true);
        m_Moving_Interact = m_Moving.FindAction("Interact", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Escape = m_UI.FindAction("Escape", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // Piano
        m_Piano = asset.FindActionMap("Piano", throwIfNotFound: true);
        m_Piano_Cancel = m_Piano.FindAction("Cancel", throwIfNotFound: true);
        m_Piano_Key0 = m_Piano.FindAction("Key0", throwIfNotFound: true);
        m_Piano_Key1 = m_Piano.FindAction("Key1", throwIfNotFound: true);
        m_Piano_Key2 = m_Piano.FindAction("Key2", throwIfNotFound: true);
        m_Piano_Key3 = m_Piano.FindAction("Key3", throwIfNotFound: true);
        m_Piano_Key4 = m_Piano.FindAction("Key4", throwIfNotFound: true);
        m_Piano_Key5 = m_Piano.FindAction("Key5", throwIfNotFound: true);
        m_Piano_Key6 = m_Piano.FindAction("Key6", throwIfNotFound: true);
        m_Piano_Key7 = m_Piano.FindAction("Key7", throwIfNotFound: true);
        m_Piano_Key8 = m_Piano.FindAction("Key8", throwIfNotFound: true);
        m_Piano_Key9 = m_Piano.FindAction("Key9", throwIfNotFound: true);
        m_Piano_Key10 = m_Piano.FindAction("Key10", throwIfNotFound: true);
        m_Piano_Key11 = m_Piano.FindAction("Key11", throwIfNotFound: true);
        // Drum
        m_Drum = asset.FindActionMap("Drum", throwIfNotFound: true);
        m_Drum_Cancel = m_Drum.FindAction("Cancel", throwIfNotFound: true);
        // Phone
        m_Phone = asset.FindActionMap("Phone", throwIfNotFound: true);
        m_Phone_HangUp = m_Phone.FindAction("HangUp", throwIfNotFound: true);
        m_Phone_Question1 = m_Phone.FindAction("Question1", throwIfNotFound: true);
        m_Phone_Question2 = m_Phone.FindAction("Question2", throwIfNotFound: true);
        m_Phone_Question3 = m_Phone.FindAction("Question3", throwIfNotFound: true);
        m_Phone_Question4 = m_Phone.FindAction("Question4", throwIfNotFound: true);
        // Computer
        m_Computer = asset.FindActionMap("Computer", throwIfNotFound: true);
        m_Computer_Cancel = m_Computer.FindAction("Cancel", throwIfNotFound: true);
        // RestartGame
        m_RestartGame = asset.FindActionMap("RestartGame", throwIfNotFound: true);
        m_RestartGame_RestartGame = m_RestartGame.FindAction("RestartGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Moving
    private readonly InputActionMap m_Moving;
    private List<IMovingActions> m_MovingActionsCallbackInterfaces = new List<IMovingActions>();
    private readonly InputAction m_Moving_Move;
    private readonly InputAction m_Moving_Look;
    private readonly InputAction m_Moving_Interact;
    public struct MovingActions
    {
        private @PlayerInput m_Wrapper;
        public MovingActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Moving_Move;
        public InputAction @Look => m_Wrapper.m_Moving_Look;
        public InputAction @Interact => m_Wrapper.m_Moving_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Moving; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovingActions set) { return set.Get(); }
        public void AddCallbacks(IMovingActions instance)
        {
            if (instance == null || m_Wrapper.m_MovingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovingActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(IMovingActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(IMovingActions instance)
        {
            if (m_Wrapper.m_MovingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovingActions instance)
        {
            foreach (var item in m_Wrapper.m_MovingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovingActions @Moving => new MovingActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Escape;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Escape => m_Wrapper.m_UI_Escape;
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @TrackedDevicePosition.started -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled -= instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled -= instance.OnTrackedDeviceOrientation;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Piano
    private readonly InputActionMap m_Piano;
    private List<IPianoActions> m_PianoActionsCallbackInterfaces = new List<IPianoActions>();
    private readonly InputAction m_Piano_Cancel;
    private readonly InputAction m_Piano_Key0;
    private readonly InputAction m_Piano_Key1;
    private readonly InputAction m_Piano_Key2;
    private readonly InputAction m_Piano_Key3;
    private readonly InputAction m_Piano_Key4;
    private readonly InputAction m_Piano_Key5;
    private readonly InputAction m_Piano_Key6;
    private readonly InputAction m_Piano_Key7;
    private readonly InputAction m_Piano_Key8;
    private readonly InputAction m_Piano_Key9;
    private readonly InputAction m_Piano_Key10;
    private readonly InputAction m_Piano_Key11;
    public struct PianoActions
    {
        private @PlayerInput m_Wrapper;
        public PianoActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Cancel => m_Wrapper.m_Piano_Cancel;
        public InputAction @Key0 => m_Wrapper.m_Piano_Key0;
        public InputAction @Key1 => m_Wrapper.m_Piano_Key1;
        public InputAction @Key2 => m_Wrapper.m_Piano_Key2;
        public InputAction @Key3 => m_Wrapper.m_Piano_Key3;
        public InputAction @Key4 => m_Wrapper.m_Piano_Key4;
        public InputAction @Key5 => m_Wrapper.m_Piano_Key5;
        public InputAction @Key6 => m_Wrapper.m_Piano_Key6;
        public InputAction @Key7 => m_Wrapper.m_Piano_Key7;
        public InputAction @Key8 => m_Wrapper.m_Piano_Key8;
        public InputAction @Key9 => m_Wrapper.m_Piano_Key9;
        public InputAction @Key10 => m_Wrapper.m_Piano_Key10;
        public InputAction @Key11 => m_Wrapper.m_Piano_Key11;
        public InputActionMap Get() { return m_Wrapper.m_Piano; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PianoActions set) { return set.Get(); }
        public void AddCallbacks(IPianoActions instance)
        {
            if (instance == null || m_Wrapper.m_PianoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PianoActionsCallbackInterfaces.Add(instance);
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Key0.started += instance.OnKey0;
            @Key0.performed += instance.OnKey0;
            @Key0.canceled += instance.OnKey0;
            @Key1.started += instance.OnKey1;
            @Key1.performed += instance.OnKey1;
            @Key1.canceled += instance.OnKey1;
            @Key2.started += instance.OnKey2;
            @Key2.performed += instance.OnKey2;
            @Key2.canceled += instance.OnKey2;
            @Key3.started += instance.OnKey3;
            @Key3.performed += instance.OnKey3;
            @Key3.canceled += instance.OnKey3;
            @Key4.started += instance.OnKey4;
            @Key4.performed += instance.OnKey4;
            @Key4.canceled += instance.OnKey4;
            @Key5.started += instance.OnKey5;
            @Key5.performed += instance.OnKey5;
            @Key5.canceled += instance.OnKey5;
            @Key6.started += instance.OnKey6;
            @Key6.performed += instance.OnKey6;
            @Key6.canceled += instance.OnKey6;
            @Key7.started += instance.OnKey7;
            @Key7.performed += instance.OnKey7;
            @Key7.canceled += instance.OnKey7;
            @Key8.started += instance.OnKey8;
            @Key8.performed += instance.OnKey8;
            @Key8.canceled += instance.OnKey8;
            @Key9.started += instance.OnKey9;
            @Key9.performed += instance.OnKey9;
            @Key9.canceled += instance.OnKey9;
            @Key10.started += instance.OnKey10;
            @Key10.performed += instance.OnKey10;
            @Key10.canceled += instance.OnKey10;
            @Key11.started += instance.OnKey11;
            @Key11.performed += instance.OnKey11;
            @Key11.canceled += instance.OnKey11;
        }

        private void UnregisterCallbacks(IPianoActions instance)
        {
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Key0.started -= instance.OnKey0;
            @Key0.performed -= instance.OnKey0;
            @Key0.canceled -= instance.OnKey0;
            @Key1.started -= instance.OnKey1;
            @Key1.performed -= instance.OnKey1;
            @Key1.canceled -= instance.OnKey1;
            @Key2.started -= instance.OnKey2;
            @Key2.performed -= instance.OnKey2;
            @Key2.canceled -= instance.OnKey2;
            @Key3.started -= instance.OnKey3;
            @Key3.performed -= instance.OnKey3;
            @Key3.canceled -= instance.OnKey3;
            @Key4.started -= instance.OnKey4;
            @Key4.performed -= instance.OnKey4;
            @Key4.canceled -= instance.OnKey4;
            @Key5.started -= instance.OnKey5;
            @Key5.performed -= instance.OnKey5;
            @Key5.canceled -= instance.OnKey5;
            @Key6.started -= instance.OnKey6;
            @Key6.performed -= instance.OnKey6;
            @Key6.canceled -= instance.OnKey6;
            @Key7.started -= instance.OnKey7;
            @Key7.performed -= instance.OnKey7;
            @Key7.canceled -= instance.OnKey7;
            @Key8.started -= instance.OnKey8;
            @Key8.performed -= instance.OnKey8;
            @Key8.canceled -= instance.OnKey8;
            @Key9.started -= instance.OnKey9;
            @Key9.performed -= instance.OnKey9;
            @Key9.canceled -= instance.OnKey9;
            @Key10.started -= instance.OnKey10;
            @Key10.performed -= instance.OnKey10;
            @Key10.canceled -= instance.OnKey10;
            @Key11.started -= instance.OnKey11;
            @Key11.performed -= instance.OnKey11;
            @Key11.canceled -= instance.OnKey11;
        }

        public void RemoveCallbacks(IPianoActions instance)
        {
            if (m_Wrapper.m_PianoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPianoActions instance)
        {
            foreach (var item in m_Wrapper.m_PianoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PianoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PianoActions @Piano => new PianoActions(this);

    // Drum
    private readonly InputActionMap m_Drum;
    private List<IDrumActions> m_DrumActionsCallbackInterfaces = new List<IDrumActions>();
    private readonly InputAction m_Drum_Cancel;
    public struct DrumActions
    {
        private @PlayerInput m_Wrapper;
        public DrumActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Cancel => m_Wrapper.m_Drum_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_Drum; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DrumActions set) { return set.Get(); }
        public void AddCallbacks(IDrumActions instance)
        {
            if (instance == null || m_Wrapper.m_DrumActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DrumActionsCallbackInterfaces.Add(instance);
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
        }

        private void UnregisterCallbacks(IDrumActions instance)
        {
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
        }

        public void RemoveCallbacks(IDrumActions instance)
        {
            if (m_Wrapper.m_DrumActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDrumActions instance)
        {
            foreach (var item in m_Wrapper.m_DrumActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DrumActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DrumActions @Drum => new DrumActions(this);

    // Phone
    private readonly InputActionMap m_Phone;
    private List<IPhoneActions> m_PhoneActionsCallbackInterfaces = new List<IPhoneActions>();
    private readonly InputAction m_Phone_HangUp;
    private readonly InputAction m_Phone_Question1;
    private readonly InputAction m_Phone_Question2;
    private readonly InputAction m_Phone_Question3;
    private readonly InputAction m_Phone_Question4;
    public struct PhoneActions
    {
        private @PlayerInput m_Wrapper;
        public PhoneActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @HangUp => m_Wrapper.m_Phone_HangUp;
        public InputAction @Question1 => m_Wrapper.m_Phone_Question1;
        public InputAction @Question2 => m_Wrapper.m_Phone_Question2;
        public InputAction @Question3 => m_Wrapper.m_Phone_Question3;
        public InputAction @Question4 => m_Wrapper.m_Phone_Question4;
        public InputActionMap Get() { return m_Wrapper.m_Phone; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PhoneActions set) { return set.Get(); }
        public void AddCallbacks(IPhoneActions instance)
        {
            if (instance == null || m_Wrapper.m_PhoneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PhoneActionsCallbackInterfaces.Add(instance);
            @HangUp.started += instance.OnHangUp;
            @HangUp.performed += instance.OnHangUp;
            @HangUp.canceled += instance.OnHangUp;
            @Question1.started += instance.OnQuestion1;
            @Question1.performed += instance.OnQuestion1;
            @Question1.canceled += instance.OnQuestion1;
            @Question2.started += instance.OnQuestion2;
            @Question2.performed += instance.OnQuestion2;
            @Question2.canceled += instance.OnQuestion2;
            @Question3.started += instance.OnQuestion3;
            @Question3.performed += instance.OnQuestion3;
            @Question3.canceled += instance.OnQuestion3;
            @Question4.started += instance.OnQuestion4;
            @Question4.performed += instance.OnQuestion4;
            @Question4.canceled += instance.OnQuestion4;
        }

        private void UnregisterCallbacks(IPhoneActions instance)
        {
            @HangUp.started -= instance.OnHangUp;
            @HangUp.performed -= instance.OnHangUp;
            @HangUp.canceled -= instance.OnHangUp;
            @Question1.started -= instance.OnQuestion1;
            @Question1.performed -= instance.OnQuestion1;
            @Question1.canceled -= instance.OnQuestion1;
            @Question2.started -= instance.OnQuestion2;
            @Question2.performed -= instance.OnQuestion2;
            @Question2.canceled -= instance.OnQuestion2;
            @Question3.started -= instance.OnQuestion3;
            @Question3.performed -= instance.OnQuestion3;
            @Question3.canceled -= instance.OnQuestion3;
            @Question4.started -= instance.OnQuestion4;
            @Question4.performed -= instance.OnQuestion4;
            @Question4.canceled -= instance.OnQuestion4;
        }

        public void RemoveCallbacks(IPhoneActions instance)
        {
            if (m_Wrapper.m_PhoneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPhoneActions instance)
        {
            foreach (var item in m_Wrapper.m_PhoneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PhoneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PhoneActions @Phone => new PhoneActions(this);

    // Computer
    private readonly InputActionMap m_Computer;
    private List<IComputerActions> m_ComputerActionsCallbackInterfaces = new List<IComputerActions>();
    private readonly InputAction m_Computer_Cancel;
    public struct ComputerActions
    {
        private @PlayerInput m_Wrapper;
        public ComputerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Cancel => m_Wrapper.m_Computer_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_Computer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ComputerActions set) { return set.Get(); }
        public void AddCallbacks(IComputerActions instance)
        {
            if (instance == null || m_Wrapper.m_ComputerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ComputerActionsCallbackInterfaces.Add(instance);
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
        }

        private void UnregisterCallbacks(IComputerActions instance)
        {
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
        }

        public void RemoveCallbacks(IComputerActions instance)
        {
            if (m_Wrapper.m_ComputerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IComputerActions instance)
        {
            foreach (var item in m_Wrapper.m_ComputerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ComputerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ComputerActions @Computer => new ComputerActions(this);

    // RestartGame
    private readonly InputActionMap m_RestartGame;
    private List<IRestartGameActions> m_RestartGameActionsCallbackInterfaces = new List<IRestartGameActions>();
    private readonly InputAction m_RestartGame_RestartGame;
    public struct RestartGameActions
    {
        private @PlayerInput m_Wrapper;
        public RestartGameActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @RestartGame => m_Wrapper.m_RestartGame_RestartGame;
        public InputActionMap Get() { return m_Wrapper.m_RestartGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RestartGameActions set) { return set.Get(); }
        public void AddCallbacks(IRestartGameActions instance)
        {
            if (instance == null || m_Wrapper.m_RestartGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RestartGameActionsCallbackInterfaces.Add(instance);
            @RestartGame.started += instance.OnRestartGame;
            @RestartGame.performed += instance.OnRestartGame;
            @RestartGame.canceled += instance.OnRestartGame;
        }

        private void UnregisterCallbacks(IRestartGameActions instance)
        {
            @RestartGame.started -= instance.OnRestartGame;
            @RestartGame.performed -= instance.OnRestartGame;
            @RestartGame.canceled -= instance.OnRestartGame;
        }

        public void RemoveCallbacks(IRestartGameActions instance)
        {
            if (m_Wrapper.m_RestartGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRestartGameActions instance)
        {
            foreach (var item in m_Wrapper.m_RestartGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RestartGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RestartGameActions @RestartGame => new RestartGameActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_MouseSchemeIndex = -1;
    public InputControlScheme MouseScheme
    {
        get
        {
            if (m_MouseSchemeIndex == -1) m_MouseSchemeIndex = asset.FindControlSchemeIndex("Mouse");
            return asset.controlSchemes[m_MouseSchemeIndex];
        }
    }
    public interface IMovingActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnEscape(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IPianoActions
    {
        void OnCancel(InputAction.CallbackContext context);
        void OnKey0(InputAction.CallbackContext context);
        void OnKey1(InputAction.CallbackContext context);
        void OnKey2(InputAction.CallbackContext context);
        void OnKey3(InputAction.CallbackContext context);
        void OnKey4(InputAction.CallbackContext context);
        void OnKey5(InputAction.CallbackContext context);
        void OnKey6(InputAction.CallbackContext context);
        void OnKey7(InputAction.CallbackContext context);
        void OnKey8(InputAction.CallbackContext context);
        void OnKey9(InputAction.CallbackContext context);
        void OnKey10(InputAction.CallbackContext context);
        void OnKey11(InputAction.CallbackContext context);
    }
    public interface IDrumActions
    {
        void OnCancel(InputAction.CallbackContext context);
    }
    public interface IPhoneActions
    {
        void OnHangUp(InputAction.CallbackContext context);
        void OnQuestion1(InputAction.CallbackContext context);
        void OnQuestion2(InputAction.CallbackContext context);
        void OnQuestion3(InputAction.CallbackContext context);
        void OnQuestion4(InputAction.CallbackContext context);
    }
    public interface IComputerActions
    {
        void OnCancel(InputAction.CallbackContext context);
    }
    public interface IRestartGameActions
    {
        void OnRestartGame(InputAction.CallbackContext context);
    }
}
